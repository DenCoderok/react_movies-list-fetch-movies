{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","Spinner-3.gif","components/Spinner/Spinner.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","Spinner","style","textAlign","SpinnerGif","FindMovie","find","onInputChange","addMovieToTheList","notFound","defaultTitle","isLoading","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","searchFilm","title","a","fetch","response","json","App","useState","setMovies","setMovie","setTitle","setNotFound","setIsLoading","some","elem","then","cons","Response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00abcfae.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/Spinner-3.b51df3f3.gif\";","import SpinnerGif from '../../Spinner-3.gif';\n\nexport const Spinner = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <img src={SpinnerGif} alt=\"spinner\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Spinner } from '../Spinner/Spinner';\n\ninterface Props {\n  movie: Movie | null;\n  find: () => void;\n  onInputChange: (title:string) => void;\n  addMovieToTheList: () => void;\n  defaultTitle: string;\n  notFound:boolean;\n  isLoading:boolean;\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  movie,\n  find,\n  onInputChange,\n  addMovieToTheList,\n  notFound,\n  defaultTitle,\n  isLoading,\n}) => {\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={notFound ? 'input is-danger' : 'input'}\n              value={defaultTitle}\n              onChange={\n                (e) => onInputChange(e.target.value)\n              }\n            />\n          </div>\n\n          {\n            notFound && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"find\"\n              className=\"button is-light\"\n              onClick={() => find()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"add\"\n              className=\"button is-primary\"\n              onClick={() => addMovieToTheList()}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {isLoading\n        ? <Spinner />\n        : movie && (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n    </>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=7d867aae&t=';\n\nexport const searchFilm = async (title:string) => {\n  const response = await fetch(`${BASE_URL}${title}`);\n\n  return response.json();\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { searchFilm } from './api/api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [notFound, setNotFound] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const find = () => {\n    setMovie(null);\n    setIsLoading(true);\n    searchFilm(title)\n      .then(cons => {\n        if (cons.Response === 'False') {\n          setNotFound(true);\n          setIsLoading(false);\n        } else {\n          setMovie(cons);\n          setIsLoading(false);\n        }\n      });\n  };\n\n  const addMovieToTheList = () => {\n    if (movie && !(movies.some(elem => elem.imdbID === movie.imdbID))) {\n      setMovies([...movies, movie]);\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  const onInputChange = (e:string) => {\n    setTitle(e);\n    setNotFound(false);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovieToTheList={addMovieToTheList}\n          onInputChange={onInputChange}\n          isLoading={isLoading}\n          defaultTitle={title}\n          notFound={notFound}\n          movie={movie}\n          find={find}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}